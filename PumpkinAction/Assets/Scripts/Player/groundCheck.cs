using System.Collections;
using System.Collections.Generic;
using UnityEngine;


[RequireComponent(typeof(Rigidbody))]
//Also requires a collider

public class groundCheck : MonoBehaviour
{
    public bool onGround;
    public float minGroundAngle = 45f; //in degrees (0.001 gets added for floating point errors)

    private List<ContactPoint> allCPs = new List<ContactPoint>(); //A list of all the ContactPoints generated during a physics collision

    private Rigidbody playerRigidbody; //the Rigidbody of the gameobject

    private void Start()
    {
        playerRigidbody = this.GetComponent<Rigidbody>();
    }

    private void FixedUpdate()
    {
        ////Determining onGround every physics update////
        
        Vector3 currVel = playerRigidbody.velocity;
        ContactPoint groundCP = default(ContactPoint); //the default normal is (0, 0, 0)

        ////STEP 1: Find the "flattest" contact point pointing upwards////

        //Go through the ContactPoints generated by OnCollisionXXX to see if we're grounded
        foreach (ContactPoint cp in allCPs)
        {
            //When the normal y value of a contact point is greater than 1, that means it's pointing upwards. normal.y = 1 means it is pointing exactly upwards and is flat.
            //If the current cp has a y value thats greater than the current groundCP, then it means it is flatter and should be the new groundCP
            if (cp.normal.y > 0.0001f && cp.normal.y > groundCP.normal.y)
            {
                groundCP = cp;
            }
        }

        ////STEP 2: Check the "flattest" contact point to see if it is "ground"////

        //Check the flattest contact point found and see if it is flat enough to be considered ground (normal angle less than specified ground angle in degrees)
        //Checking the y value of the normal again because the angle between a normal of (0, 0, 0) and Vector3.up is 0
        if (groundCP.normal.y > 0.0001f && Vector3.Angle(groundCP.normal, Vector3.up) <= (minGroundAngle + 0.001f))
        {
            if (!onGround && currVel.y <= 0.001f) //check if we are currently in the air and NOT moving upwards
            {
                onGround = true;
                Debug.DrawRay(groundCP.point, groundCP.normal * 5, Color.green);
            }
            else if (onGround) //if we are already on the ground, then stay grounded
            {
                onGround = true;
                Debug.DrawRay(groundCP.point, groundCP.normal * 5, Color.green);
            }
        }
        else
        {
            onGround = false;
        }

        allCPs.Clear();
    }

    private void OnCollisionEnter(Collision collisionInfo)
    {
        allCPs.AddRange(collisionInfo.contacts);
    }

    private void OnCollisionStay(Collision collisionInfo)
    {
        allCPs.AddRange(collisionInfo.contacts);
    }
}
